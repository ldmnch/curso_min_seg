df %>%
group_by(clase_arma)%>%
summarize(n=n())
df %>%
group_by(provincia, clase_arma)%>%
summarize(n=n())
df %>%
group_by(provincia)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)))
df %>%
group_by(ani+)%>%
df %>%
group_by(anio)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)))
df %>%
group_by(clase_arma)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)))
df %>%
group_by(anio)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)),
mean_inc = round(mean(cant_inc, na.rm=TRUE)))
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, tidy=TRUE)
library(tidyverse)
df <- readxl::read_excel("../clase4/data/Integrado_HD_base_usuaria_2017-2020.xlsx")
df %>%
group_by(clase_arma)%>%
summarize(n=n())
df %>%
group_by(provincia, clase_arma)%>%
summarize(n=n())
df %>%
group_by(anio)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)),
mean_inc = round(mean(cant_inc, na.rm=TRUE)))
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, tidy=TRUE)
library(tidyverse)
df <- readxl::read_excel("../clase4/data/Integrado_HD_base_usuaria_2017-2020.xlsx")
df %>%
group_by(clase_arma)%>%
summarize(n=n())
df %>%
group_by(provincia, clase_arma)%>%
summarize(n=n())
df %>%
group_by(anio)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)),
mean_inc = round(mean(cant_inc, na.rm=TRUE)))
medidas_resumen <- df %>%
group_by(provincia) %>%
summarise(media_inc = mean(cant_inc, na.rm = TRUE),
mediana_inc = median(cant_inc, na.rm = TRUE)) %>%
select(provincia,
media_inc, mediana_inc)
View(medidas_resumen)
View(medidas_resumen)
pivot_longer_resumen <- medidas_resumen%>%
pivot_longer(cols = c(media_anio, mediana_anio),
names_to = "variable",
values_to = "valor")
pivot_longer_resumen <- medidas_resumen%>%
pivot_longer(cols = c(media_inc, mediana_inc),
names_to = "variable",
values_to = "valor")
pivot_longer_resumen
medidas_resumen
pivot_longer_resumen
pivot_longer_resumen%>% pivot_wider(id_cols= provincia,
names_from=variable,
values_from = valor)
geo <- read_csv('./data/provincia.csv') %>% select(nam, geom)
head(geo)
View(df)
geo <- read_sf('./data/pxlocdatos.shp')
geo <- st::read_sf('./data/pxlocdatos.shp')
geo <- sp::read_sf('./data/pxlocdatos.shp')
geo <- sf::read_sf('./data/pxlocdatos.shp')
View(geo)
geo <- sf::read_sf('./data/pxpciadatosok.shp')
View(geo)
geo <- sf::read_sf('./data/pxlocdatos.shp')
View(df)
df_merged <- df %>% left_join(geo, by = c("Cod_INDEC_Prov" = "codpcia", "codigo_departamento" = "coddpto"))
View(df_merged)
geo <- sf::read_sf('./data/pxlocdatos.shp') %>% select(codpcia, coddpto, geometry)
head(geo)
df_merged <- df %>% left_join(geo, by = c("Cod_INDEC_Prov" = "codpcia", "codigo_departamento" = "coddpto"))
colnames(df_merged)
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, tidy=TRUE)
library(tidyverse)
df <- readxl::read_excel("./clase4/data/Integrado_HD_base_usuaria_2017-2020.xlsx")
class(df$fecha_hecho)
fecha_1 <- "30 de abril"
library(lubridate)
dy(fecha_1)
dm(fecha_1)
fecha_1 <- "30 de abril 2021"
dmy(fecha_1)
fecha_3 <- c("Oct 4", "May 20", "Feb 15")
parse_date_time(fecha_3, orders = 'md')
class(fecha_3)
fecha_3
fecha_3 <- c("Oct 4", "May 20", "Feb 15")
parse_date_time(fecha_3, orders = 'md')
fecha_3 <- parse_date_time(fecha_3, orders = 'md')
class(fecha_3)
fecha_3 <- c("Oct 4", "May 20", "Feb 15")
parse_date_time(fecha_3, orders = 'md')
data_ejemplo_fecha <- df %>% select(fecha_hecho) %>%
mutate(dia = wday(fecha_hecho),
dia_semana = wday(fecha_hecho, label = TRUE),
mes = month(fecha_hecho),
mes_nombre = month(fecha_hecho, label =TRUE),
anio = year(fecha_hecho))
head(data_ejemplo_fecha)
max(df$fecha_hecho)-min(df$fecha_hecho)
month(max(df$fecha_hecho)-min(df$fecha_hecho))
max(df$fecha_hecho)-min(df$fecha_hecho)
fecha_4 <- df$fecha_hecho[4]
fecha_4
ejemplo_3+days(4)
fecha_4 <- df$fecha_hecho[4]
fecha_4
fecha_4+days(4)
fecha_4+months(5)
fecha_4+years(2)
library(readr)
Base_PUFEAF <- read_csv("data/Base_PUFEAF.csv")
View(Base_PUFEAF)
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, tidy=TRUE)
library(tidyverse)
df <- readxl::read_excel("./data/Integrado_HD_base_usuaria_2017-2020.xlsx")
df %>%
group_by(clase_arma)%>%
summarize(n=n())
df %>%
group_by(provincia, clase_arma)%>%
summarize(n=n())
df %>%
group_by(anio)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)),
mean_inc = round(mean(cant_inc, na.rm=TRUE)))
medidas_resumen <- df %>%
group_by(provincia) %>%
summarise(media_inc = mean(cant_inc, na.rm = TRUE),
mediana_inc = median(cant_inc, na.rm = TRUE)) %>%
select(provincia,
media_inc, mediana_inc)
pivot_longer_resumen <- medidas_resumen%>%
pivot_longer(cols = c(media_inc, mediana_inc),
names_to = "variable",
values_to = "valor")
pivot_longer_resumen
pivot_longer_resumen%>% pivot_wider(id_cols= provincia,
names_from=variable,
values_from = valor)
geo <- sf::read_sf('./data/pxlocdatos.shp') %>% select(codpcia, coddpto, geometry)
head(geo)
df_merged <- geo %>% left_join(df, by = c("codpcia" = "Cod_INDEC_Prov", "coddpto" = "codigo_departamento"))
colnames(df_merged)
class(df$fecha_hecho)
library(lubridate)
fecha_1 <- "30 de abril 2021"
class(fecha_1)
fecha_1_formato <- dmy(fecha_1)
class(fecha_1_formato)
fecha_2 <- "2020/08/04 13:40:43"
fecha_2<-ymd_hms(fecha_2)
class(fecha_2)
fecha_3 <- c("Oct 4", "May 20", "Feb 15")
parse_date_time(fecha_3, orders = 'md')
data_ejemplo_fecha <- df %>% select(fecha_hecho) %>%
mutate(dia = wday(fecha_hecho),
dia_semana = wday(fecha_hecho, label = TRUE),
mes = month(fecha_hecho),
mes_nombre = month(fecha_hecho, label =TRUE),
anio = year(fecha_hecho))
head(data_ejemplo_fecha)
max(df$fecha_hecho)-min(df$fecha_hecho)
fecha_4 <- df$fecha_hecho[4]
fecha_4
fecha_4+days(4)
fecha_4+months(5)
fecha_4+years(2)
knitr::opts_chunk$set(echo=FALSE)
ggplot(df, aes(x=provincia))+
geom_bar()+
coord_flip()+
labs(
title = "Homcidios dolosos registrados por provincia",
subtitle = "2017-2020",
caption = "Fuente: Ministerio de Seguridad de la Nación",
x = "Provincia",
y = "n"
)
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, collapse=TRUE, highlight=TRUE, paged.print=FALSE, prompt=TRUE, strip.white=FALSE)
library(tidyverse)
df <- readxl::read_xlsx("data/Integrado_HD_base_usuaria_2017-2020.xlsx")
ggplot()
tb1 <- df %>% group_by(anio)%>%
summarise(n=n_distinct(Id_hecho))
ggplot(tb1, aes(x=anio, y = n))+
geom_histogram(stat = 'identity')
df %>% group_by(anio, Id_hecho)%>%
summarise(total=sum(cant_vic))%>%
mutate(total_vict = sum(total)) %>%
ggplot(aes(x=anio, y=total_vict))+
geom_line()
df %>% group_by(anio)%>%
summarise(n=n())%>%
mutate(total=sum(n),
perc = (n/total)*100)%>%
ggplot(aes(x=anio, y=perc))+
geom_col()
df %>% group_by(anio, clase_arma)%>%
summarise(n=n())%>%
ggplot(aes(x=anio, y=n, color=clase_arma))+
geom_line()
df %>% group_by(anio, provincia)%>%
summarise(n=n_distinct(Id_hecho)) %>%
ggplot(aes(x=anio, y = n, fill = provincia))+
geom_col(position = "fill")
library(viridis)
df %>% group_by(anio, provincia)%>%
summarise(n=n_distinct(Id_hecho)) %>%
ggplot(aes(x=anio, y = n, fill = provincia))+
geom_col(position = "fill")+
scale_fill_viridis_d(option="magma")
colores <- c("Femenino" = 'forestgreen', "Masculino" = 'darkorchid2')
df %>% filter(sexo_inculpado %in% c("Femenino", "Masculino"))%>%
ggplot(aes(x=anio, fill = sexo_inculpado))+
geom_bar(position = "dodge")+
scale_fill_manual(values = colores)
vict_prov_anio <- df %>% group_by(anio, provincia) %>%
summarise(n = n_distinct(Id_hecho), #Cuento la cantidad de Id_hechos
tot_vic = sum(cant_vic))%>% #Cuento la cantidad de víctimas
ungroup()%>%
mutate(tasa_vic = tot_vic/n)
head(vict_prov_anio)
ggplot(vict_prov_anio, aes(x = anio, y = n, color = provincia, size = tasa_vic))+
geom_point()+
scale_color_viridis_d(option = "inferno")
ggplot(vict_prov_anio, aes(x = anio, y = n, color = provincia, size = tasa_vic))+
geom_point()+
scale_y_log10()+
scale_color_viridis_d(option = "inferno")
df %>% filter(sexo_inculpado %in% c("Femenino", "Masculino"))%>%
ggplot(aes(x=anio, fill = sexo_inculpado))+
geom_bar(position = "dodge")+
scale_fill_manual(values = colores)+
theme_dark()
df %>% filter(sexo_inculpado %in% c("Femenino", "Masculino"))%>%
ggplot(aes(x=anio, fill = sexo_inculpado))+
geom_bar(position = "dodge")+
scale_fill_manual(values = colores)+
theme_minimal()
ggplot(df, aes(x=provincia))+
geom_bar()
ggplot(df, aes(x=provincia))+
geom_bar()+
coord_flip()
ggplot(df, aes(x=provincia))+
geom_bar()+
theme(axis.text.x = element_text(angle = 90))
ggplot(df, aes(x=provincia))+
geom_bar()+
coord_flip()+
labs(
title = "Homcidios dolosos registrados por provincia",
subtitle = "2017-2020",
caption = "Fuente: Ministerio de Seguridad de la Nación",
x = "Provincia",
y = "n"
)
ggplot(df)+
geom_bar(aes(x=reorder(provincia, n)))+
coord_flip()+
labs(
title = "Homcidios dolosos registrados por provincia",
subtitle = "2017-2020",
caption = "Fuente: Ministerio de Seguridad de la Nación",
x = "Provincia",
y = "n"
)
ggplot(df)+
geom_bar(aes(x=reorder(provincia, -n)))+
coord_flip()+
labs(
title = "Homcidios dolosos registrados por provincia",
subtitle = "2017-2020",
caption = "Fuente: Ministerio de Seguridad de la Nación",
x = "Provincia",
y = "n"
)
df %>% group_by(anio, provincia)%>%
summarise(n=n_distinct(Id_hecho)) %>%
ggplot(aes(x=anio, y = n, fill = provincia))+
geom_histogram(position = "fill")
df %>% group_by(anio, provincia)%>%
summarise(n=n_distinct(Id_hecho)) %>%
ggplot(aes(x=anio, y = n, fill = provincia))
View(df)
df %>%
ggplot(aes(x=cant_vic, fill = provincia))+
geom_histogram(position = "fill")
df %>%
ggplot(aes(x=cant_vic, fill = provincia))+
geom_histogram()
View(df)
df %>%
ggplot(aes(x=anio, fill = provincia))+
geom_histogram()
df %>%
ggplot(aes(x=anio, fill = provincia))+
geom_histogram(bins = 4)
df %>%
ggplot(aes(x=anio, fill = provincia))+
geom_histogram()
View(tb1)
tb1 %>% #Usamos tb1 porque es donde guardamos la frecuencia contada por ID
ggplot(aes(x=anio))+
geom_histogram()
tb1 %>% #Usamos tb1 porque es donde guardamos la frecuencia contada por ID
ggplot(aes(x=anio))+
geom_histogram(bins = 4)
View(tb1)
tb1 %>% #Usamos tb1 porque es donde guardamos la frecuencia contada por ID
ggplot(aes(x=anio))+
geom_histogram()
### 1a. Importar los paquetes tidyverse, readxl y lubridate.
library(tidyverse)
library(readxl)
library(lubridate)
### 1b. Importar el dataframe de PUFEAF.
df <- read_csv("./data/Base_PUFEAF.csv")
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, tidy=TRUE)
library(tidyverse)
df <- readxl::read_excel("./data/Integrado_HD_base_usuaria_2017-2020.xlsx")
vector_valores <- unique(df$provincia)
#En esta lista vamos a guardar nuestros resultados
datos_graf <- list()
for (valor in (seq(length(vector_valores)))) {
tabla_resumen <- df %>%
filter(provincia == vector_valores[valor]) %>%
filter(en_ocasion_otro_delito != "Sin determinación") %>%
group_by(departamento, en_ocasion_otro_delito) %>%
summarise(n = n(),
provincia = unique(provincia))  %>%
pivot_wider(id_cols= c(departamento, provincia),
names_from = en_ocasion_otro_delito,
values_from = n)
datos_graf[[valor]] <-  tabla_resumen
}
datos_graf[[8]]
library(openxlsx)
funcion_procesamiento <- function(df){
df <- df%>%
mutate_at(vars(-c(departamento, provincia)),  ~ case_when(
is.na(.) ~ 0,
TRUE ~ as.numeric(.)
))
prov <- unique(df$provincia)
write.xlsx(df, file = paste0("./data/delitos_", prov,".xlsx"), append = TRUE)
}
for (i in seq(length(datos_graf))) {
funcion_procesamiento(datos_graf[[i]])
}
library(openxlsx)
funcion_procesamiento <- function(df){
df <- df%>%
mutate_at(vars(-c(departamento, provincia)),  ~ case_when(
is.na(.) ~ 0,
TRUE ~ as.numeric(.)
))
prov <- unique(df$provincia)
write.xlsx(df, file = paste0("./data/delitos_provs.xlsx"),
sheetName =prov, append = TRUE)
}
for (i in seq(length(datos_graf))) {
funcion_procesamiento(datos_graf[[i]])
}
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, tidy=TRUE)
library(tidyverse)
df <- readxl::read_excel("./data/Integrado_HD_base_usuaria_2017-2020.xlsx")
df %>%
group_by(clase_arma)%>%
summarize(n=n())
df %>%
group_by(provincia, clase_arma)%>%
summarize(n=n())
df %>%
group_by(anio)%>%
summarize(mean_vic=round(mean(cant_vic,na.rm=TRUE)),
mean_inc = round(mean(cant_inc, na.rm=TRUE)))
medidas_resumen <- df %>%
group_by(provincia) %>%
summarise(media_inc = mean(cant_inc, na.rm = TRUE),
mediana_inc = median(cant_inc, na.rm = TRUE)) %>%
select(provincia,
media_inc, mediana_inc)
pivot_longer_resumen <- medidas_resumen%>%
pivot_longer(cols = c(media_inc, mediana_inc),
names_to = "variable",
values_to = "valor")
medidas_resumen
pivot_longer_resumen%>% pivot_wider(id_cols= provincia,
names_from=variable,
values_from = valor)
df %>%
group_by(provincia, clase_arma)%>%
summarize(n=n()) %>%
pivot_wider(id_cols =provincia, names_from = clase_arma, values_from = n)
geo <- sf::read_sf('./data/pxlocdatos.shp') %>% select(codpcia, coddpto, geometry)
head(geo)
df_merged <- geo %>% left_join(df, by = c("codpcia" = "Cod_INDEC_Prov", "coddpto" = "codigo_departamento"))
colnames(df_merged)
class(df$fecha_hecho)
library(lubridate)
fecha_1 <- "30 de abril 2021"
class(fecha_1)
fecha_1_formato <- dmy(fecha_1)
class(fecha_1_formato)
fecha_2 <- "2020/08/04 13:40:43"
fecha_2<-ymd_hms(fecha_2)
class(fecha_2)
fecha_3 <- c("Oct 4", "May 20", "Feb 15")
parse_date_time(fecha_3, orders = 'md')
data_ejemplo_fecha <- df %>% select(fecha_hecho) %>%
mutate(dia = wday(fecha_hecho),
dia_semana = wday(fecha_hecho, label = TRUE),
mes = month(fecha_hecho),
mes_nombre = month(fecha_hecho, label =TRUE),
anio = year(fecha_hecho))
head(data_ejemplo_fecha)
max(df$fecha_hecho)-min(df$fecha_hecho)
fecha_4 <- df$fecha_hecho[4]
fecha_4
fecha_4+days(4)
fecha_4+months(5)
fecha_4+years(2)
if( 10+5 == 15){
print("Perfecto")
}
if( 10+5 == 148.24){
print("Error")
}
ultima.actualiz.base<- max(df$fecha_hecho)
ultima.actualiz.base
if (ultima.actualiz.base == Sys.Date()) {
"Datos al día de hoy"
} else{
Sys.Date() - ultima.actualiz.base
}
for (x in 1:10){
print(x*5)
}
(1:10)*5
count<-0
while(count < 4){
print(count)
count<-count + 1
}
for (i in 1:6){
if (i<=2){
next
}
print(i)
}
for (i in 1:6){
if (i>2){
break
}
print(i)
}
vector_valores <- unique(df$provincia)
#En esta lista vamos a guardar nuestros resultados
datos_graf <- list()
for (valor in (seq(length(vector_valores)))) {
tabla_resumen <- df %>%
filter(provincia == vector_valores[valor]) %>%
filter(en_ocasion_otro_delito != "Sin determinación") %>%
group_by(departamento, en_ocasion_otro_delito) %>%
summarise(n = n(),
provincia = unique(provincia))  %>%
pivot_wider(id_cols= c(departamento, provincia),
names_from = en_ocasion_otro_delito,
values_from = n)
datos_graf[[valor]] <-  tabla_resumen
}
datos_graf[[8]]
fun_ej <-function(argumentos){
#[se hace algún cómputo]
}
library(openxlsx)
funcion_procesamiento <- function(df){
df <- df%>%
mutate_at(vars(-c(departamento, provincia)),  ~ case_when(
is.na(.) ~ 0,
TRUE ~ as.numeric(.)
))
prov <- unique(df$provincia)
write.xlsx(df, file = paste0("./data/delitos_", prov,".xlsx"), append = TRUE)
}
for (i in seq(length(datos_graf))) {
funcion_procesamiento(datos_graf[[i]])
}
